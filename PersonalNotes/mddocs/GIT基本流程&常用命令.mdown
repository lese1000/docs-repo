##GIT基本流程&常用命令

>- Git clone
>- Git add
>- Git commit
>- Git push
>- Git checkout
>- Git reset
>- Git pull
>- Git status
>- Git branch
>//advanced
>- Git tag
>- Git log
>- Git merge

###1. clone(初始化仓库)
```bash
git clone https://github.com/lese1000/docs-repo.git #(远程仓库)
#将远程仓库拷贝到当前目录下创，并建 docs-repo目录（工作目录）
# git init 初始化本地仓库--设置本地指定目指为工作目录
```
###2. add（添加文件）
```bash
git add filename1 filename2 # 添加指定文件
git add -A #添加当前目录下所有文件
```
###3. commit(添加版本)
```bash
git commit -m ‘initial version’ # -m 后面参数为注释，无参数 -a ,commit这个文件添加时的状态，不会把文件之后的修改也commit进去
git commit -a -m ‘initial version’ #把所有已经添加的文件都提交，包括添加后对文件的修改。
```
###4. push(推送变更)
```bash
git push origin master # 把自己master的分支提交到名字为origin的服务器上
# 克隆下来的仓库可直接  git push 即可。
# git remote -v 列出服务器端的别名和地址
# 本地初始化的仓库提交到服务器需：
git remote add code_a git://url/test.git  #添加服务器地址,code_a是别名
# 另  git fetch code_a  #复制服务器的仓库到本地，但不合并，git pull会自动合并
# 另  git merge code_a/master #把服务器master分支合并到自己当前版本下
```
##创建到提交服务器流程整合：（create a new repository on github）
```bash
echo "# demo-repo" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/lese1000/demo-repo.git
git push -u origin master
```
-----------------------------
###Note:在提交到服务器之前需
创建一个身份标识（将testUsername和testEmail@qq.com改成你自己的用户名和邮箱）
```bash
git config --global user.name testUsername #用户名
git config --global user.email testEmail@qq.com #邮箱
```

###5. 创建并管理分支
**`分支类似备份点，可以创建多个，可在各分支上对文件操作`**。但在两个分支的同一个文件的同一个地方都做了修改，这时候会冲突，merge就会失败。merge不会删除分支，它的实质是把两个版本合在一起，然后在当前分支创建一个新的commit。
```bash
git branch test  #创建一个test分支
git checkout test  #转到test分支
# edit something...commit something...
git checkout master  #转到master分支
git merge test  #合并test分支
git checkout -b test2  #创建test2分支，并转到test2分支
git branch -d test #删除test分支
git branch  #列出分支列表
git branch -v  #列出分支列表和当前commit
```
###6. 撤消改动
```bash
git reset HEAD readme  #把readme文件从暂存区域去除
git checkout -- filename1 #只撤消对这一个文件的修改，还原之前版本
git reset --hard HEAD^ #回滚到上一个版本
#HEAD是指向当前版本，^指当前版本的父版本，这个操作无法撤消。可以把--hard换成--soft，这只会回退commit信息。还有一个--mixed默认选项。
```